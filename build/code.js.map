{
  "version": 3,
  "sources": ["../src/code.ts"],
  "sourcesContent": ["/// <reference types=\"@figma/plugin-typings\" />\n\n// This file holds the main code for plugins. Code in this file has access to\n// the *figma document* via the figma global object.\n// You can access browser APIs in the <script> tag inside \"ui.html\" which has a\n// full browser environment (See https://www.figma.com/plugin-docs/how-plugins-run).\n\ninterface UIMessage {\n  type: \"create-cds\" | \"update-components\" | \"export-styles\";\n  styles?: {\n    colors: { name: string; paints: Paint[] }[];\n    typography: { name: string; fontSize: number; fontName: FontName }[];\n    effects: { name: string; effects: Effect[] }[];\n  };\n}\n\ninterface ErrorMessage {\n  type: \"error\";\n  message: string;\n}\n\ninterface CDSComponentProperties {\n  variant?: {\n    type: \"VARIANT_GROUP\";\n    options: string[];\n  };\n  size?: {\n    type: \"VARIANT_GROUP\";\n    options: string[];\n  };\n  state?: {\n    type: \"VARIANT_GROUP\";\n    options: string[];\n  };\n  type?: {\n    type: \"VARIANT_GROUP\";\n    options: string[];\n  };\n  hasIcon?: {\n    type: \"BOOLEAN\";\n    defaultValue: boolean;\n  };\n}\n\ninterface CDSComponentWithProperties extends ComponentNode {\n  setProperties(properties: CDSComponentProperties): void;\n}\n\n// Figma \uD50C\uB7EC\uADF8\uC778 \uBA54\uC778 \uCF54\uB4DC\nfigma.showUI(__html__, { width: 320, height: 400 });\n\n// UI \uC774\uBCA4\uD2B8 \uD578\uB4E4\uB7EC\nfigma.ui.onmessage = async (msg: UIMessage) => {\n  // \uC791\uC5C5 \uC2DC\uC791 \uC804 \uD604\uC7AC \uC120\uD0DD\uC744 \uC800\uC7A5\n  const currentSelection = figma.currentPage.selection;\n\n  try {\n    switch (msg.type) {\n      case \"create-cds\":\n        await createCDS();\n        break;\n\n      case \"update-components\":\n        await updateComponents();\n        break;\n\n      case \"export-styles\":\n        await exportStyles();\n        break;\n\n      default:\n        console.error(\"Unknown message type:\", msg.type);\n    }\n  } catch (error: unknown) {\n    // \uC5D0\uB7EC \uBC1C\uC0DD \uC2DC UI\uC5D0 \uC54C\uB9BC\n    const errorMessage: ErrorMessage = {\n      type: \"error\",\n      message: error instanceof Error ? error.message : String(error),\n    };\n    figma.ui.postMessage(errorMessage);\n  }\n\n  // \uC791\uC5C5 \uC644\uB8CC \uD6C4 \uC6D0\uB798 \uC120\uD0DD \uBCF5\uC6D0\n  figma.currentPage.selection = currentSelection;\n};\n\n// CDS \uC0DD\uC131 \uD568\uC218\nasync function createCDS() {\n  // \uC2A4\uD0C0\uC77C \uC2DC\uC2A4\uD15C \uC0DD\uC131\n  const styleFrame = figma.createFrame();\n  styleFrame.name = \"CDS/Styles\";\n  styleFrame.resize(800, 600);\n\n  // \uCEEC\uB7EC \uC2A4\uD0C0\uC77C \uC0DD\uC131\n  const colors = {\n    primary: { r: 0.2, g: 0.4, b: 0.9 },\n    secondary: { r: 0.6, g: 0.2, b: 0.8 },\n    success: { r: 0.2, g: 0.8, b: 0.4 },\n    warning: { r: 1, g: 0.6, b: 0.1 },\n    error: { r: 0.9, g: 0.2, b: 0.2 },\n  };\n\n  Object.entries(colors).forEach(([name, color]) => {\n    const colorStyle = figma.createPaintStyle();\n    colorStyle.name = `colors/${name}`;\n    colorStyle.paints = [{ type: \"SOLID\", color }];\n  });\n\n  // \uD0C0\uC774\uD3EC\uADF8\uB798\uD53C \uC2A4\uD0C0\uC77C \uC0DD\uC131\n  const typography = {\n    \"heading/h1\": { size: 48, weight: 700 },\n    \"heading/h2\": { size: 36, weight: 700 },\n    \"heading/h3\": { size: 24, weight: 600 },\n    \"body/large\": { size: 18, weight: 400 },\n    \"body/medium\": { size: 16, weight: 400 },\n    \"body/small\": { size: 14, weight: 400 },\n  };\n\n  Object.entries(typography).forEach(([name, style]) => {\n    const textStyle = figma.createTextStyle();\n    textStyle.name = `typography/${name}`;\n    textStyle.fontSize = style.size;\n    textStyle.fontName = { family: \"Inter\", style: \"Regular\" };\n  });\n\n  figma.notify(\"CDS \uC0DD\uC131 \uC644\uB8CC\");\n}\n\n// \uCEF4\uD3EC\uB10C\uD2B8 \uC5C5\uB370\uC774\uD2B8 \uD568\uC218\nasync function updateComponents() {\n  const nodes = figma.root.findAll((node) => node.type === \"COMPONENT\");\n  const components = nodes.filter(\n    (node): node is ComponentNode => node.type === \"COMPONENT\"\n  );\n\n  for (const component of components) {\n    // \uCEF4\uD3EC\uB10C\uD2B8 \uC774\uB984\uC774 CDS\uB85C \uC2DC\uC791\uD558\uB294 \uACBD\uC6B0\uC5D0\uB9CC \uC5C5\uB370\uC774\uD2B8\n    if (component.name.startsWith(\"CDS/\")) {\n      // \uCEF4\uD3EC\uB10C\uD2B8 \uC18D\uC131 \uC5C5\uB370\uC774\uD2B8\n      await updateComponentProperties(component);\n    }\n  }\n\n  figma.notify(\"\uCEF4\uD3EC\uB10C\uD2B8 \uC5C5\uB370\uC774\uD2B8 \uC644\uB8CC\");\n}\n\n// \uC2A4\uD0C0\uC77C \uB0B4\uBCF4\uB0B4\uAE30 \uD568\uC218\nasync function exportStyles() {\n  const styles = {\n    colors: await figma.getLocalPaintStylesAsync(),\n    typography: await figma.getLocalTextStylesAsync(),\n    effects: await figma.getLocalEffectStylesAsync(),\n  };\n\n  const styleData = {\n    colors: styles.colors.map((style) => ({\n      name: style.name,\n      paints: style.paints,\n    })),\n    typography: styles.typography.map((style) => ({\n      name: style.name,\n      fontSize: style.fontSize,\n      fontName: style.fontName,\n    })),\n    effects: styles.effects.map((style) => ({\n      name: style.name,\n      effects: style.effects,\n    })),\n  };\n\n  // UI\uB85C \uC2A4\uD0C0\uC77C \uB370\uC774\uD130 \uC804\uC1A1\n  figma.ui.postMessage({\n    type: \"export-complete\",\n    styles: styleData,\n  });\n\n  figma.notify(\"\uC2A4\uD0C0\uC77C \uB0B4\uBCF4\uB0B4\uAE30 \uC644\uB8CC\");\n}\n\n// \uCEF4\uD3EC\uB10C\uD2B8 \uC18D\uC131 \uC5C5\uB370\uC774\uD2B8 \uD568\uC218\nasync function updateComponentProperties(component: ComponentNode) {\n  // \uCEF4\uD3EC\uB10C\uD2B8 \uD0C0\uC785\uC5D0 \uB530\uB978 \uC18D\uC131 \uC5C5\uB370\uC774\uD2B8\n  if (component.name.includes(\"Button\")) {\n    updateButtonProperties(component);\n  } else if (component.name.includes(\"Input\")) {\n    updateInputProperties(component);\n  }\n}\n\n// \uBC84\uD2BC \uCEF4\uD3EC\uB10C\uD2B8 \uC18D\uC131 \uC5C5\uB370\uC774\uD2B8\nfunction updateButtonProperties(component: ComponentNode) {\n  // \uBC84\uD2BC \uBCC0\uD615 \uC18D\uC131 \uC124\uC815\n  if (\"setProperties\" in component) {\n    (component as CDSComponentWithProperties).setProperties({\n      variant: {\n        type: \"VARIANT_GROUP\",\n        options: [\"primary\", \"secondary\", \"outline\"],\n      },\n      size: {\n        type: \"VARIANT_GROUP\",\n        options: [\"small\", \"medium\", \"large\"],\n      },\n      state: {\n        type: \"VARIANT_GROUP\",\n        options: [\"default\", \"hover\", \"pressed\", \"disabled\"],\n      },\n    });\n  }\n}\n\n// \uC785\uB825 \uD544\uB4DC \uCEF4\uD3EC\uB10C\uD2B8 \uC18D\uC131 \uC5C5\uB370\uC774\uD2B8\nfunction updateInputProperties(component: ComponentNode) {\n  // \uC785\uB825 \uD544\uB4DC \uBCC0\uD615 \uC18D\uC131 \uC124\uC815\n  if (\"setProperties\" in component) {\n    (component as CDSComponentWithProperties).setProperties({\n      type: {\n        type: \"VARIANT_GROUP\",\n        options: [\"text\", \"number\", \"password\"],\n      },\n      state: {\n        type: \"VARIANT_GROUP\",\n        options: [\"default\", \"focus\", \"error\", \"disabled\"],\n      },\n      hasIcon: {\n        type: \"BOOLEAN\",\n        defaultValue: false,\n      },\n    });\n  }\n}\n\n// Runs this code if the plugin is run in Figma\nif (figma.editorType === \"figma\") {\n  // This plugin creates rectangles on the screen.\n  const numberOfRectangles = 5;\n\n  const nodes: SceneNode[] = [];\n  for (let i = 0; i < numberOfRectangles; i++) {\n    const rect = figma.createRectangle();\n    rect.x = i * 150;\n    rect.fills = [{ type: \"SOLID\", color: { r: 1, g: 0.5, b: 0 } }];\n    figma.currentPage.appendChild(rect);\n    nodes.push(rect);\n  }\n  figma.currentPage.selection = nodes;\n  figma.viewport.scrollAndZoomIntoView(nodes);\n\n  // Make sure to close the plugin when you're done. Otherwise the plugin will\n  // keep running, which shows the cancel button at the bottom of the screen.\n  figma.closePlugin();\n}\n\n// Runs this code if the plugin is run in FigJam\nif (figma.editorType === \"figjam\") {\n  // This plugin creates shapes and connectors on the screen.\n  const numberOfShapes = 5;\n\n  const nodes: SceneNode[] = [];\n  for (let i = 0; i < numberOfShapes; i++) {\n    const shape = figma.createShapeWithText();\n    // You can set shapeType to one of: 'SQUARE' | 'ELLIPSE' | 'ROUNDED_RECTANGLE' | 'DIAMOND' | 'TRIANGLE_UP' | 'TRIANGLE_DOWN' | 'PARALLELOGRAM_RIGHT' | 'PARALLELOGRAM_LEFT'\n    shape.shapeType = \"ROUNDED_RECTANGLE\";\n    shape.x = i * (shape.width + 200);\n    shape.fills = [{ type: \"SOLID\", color: { r: 1, g: 0.5, b: 0 } }];\n    figma.currentPage.appendChild(shape);\n    nodes.push(shape);\n  }\n\n  for (let i = 0; i < numberOfShapes - 1; i++) {\n    const connector = figma.createConnector();\n    connector.strokeWeight = 8;\n\n    connector.connectorStart = {\n      endpointNodeId: nodes[i].id,\n      magnet: \"AUTO\",\n    };\n\n    connector.connectorEnd = {\n      endpointNodeId: nodes[i + 1].id,\n      magnet: \"AUTO\",\n    };\n  }\n\n  figma.currentPage.selection = nodes;\n  figma.viewport.scrollAndZoomIntoView(nodes);\n\n  // Make sure to close the plugin when you're done. Otherwise the plugin will\n  // keep running, which shows the cancel button at the bottom of the screen.\n  figma.closePlugin();\n}\n\n// Runs this code if the plugin is run in Slides\nif (figma.editorType === \"slides\") {\n  // This plugin creates slides and puts the user in grid view.\n  const numberOfSlides = 5;\n\n  const nodes: SlideNode[] = [];\n  for (let i = 0; i < numberOfSlides; i++) {\n    const slide = figma.createSlide();\n    nodes.push(slide);\n  }\n\n  figma.viewport.slidesView = \"grid\";\n  figma.currentPage.selection = nodes;\n\n  // Make sure to close the plugin when you're done. Otherwise the plugin will\n  // keep running, which shows the cancel button at the bottom of the screen.\n  figma.closePlugin();\n}\n"],
  "mappings": "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",
  "names": ["msg", "currentSelection", "createCDS", "updateComponents", "exportStyles", "error", "errorMessage", "styleFrame", "name", "color", "colorStyle", "style", "textStyle", "components", "node", "component", "updateComponentProperties", "styles", "styleData", "updateButtonProperties", "updateInputProperties", "nodes", "i", "rect", "shape", "connector", "slide"]
}
